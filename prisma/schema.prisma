// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum day_of_the_week {
  SUNDAY
  MONDAY
  TUESDAY
  WEDNESDAY
  THURSDAY
  FRIDAY
  SATURDAY
}

enum category_name {
  COFFEE
  BAKERY
  DRINKS
}

// PRODUCER-RELATED MODELS

model producer {
  id        Int      @default(autoincrement()) @id
  name      String   @unique

  shop      shop[]
  products  product[]
}

model shop {
  id              Int             @default(autoincrement()) @id
  lat             Float?
  lon             Float?

  producer        producer        @relation(fields: [producerId], references: [id])
  producerId      Int             @unique

  working_hours   working_hours?
}

model working_hours {
  id              Int             @default(autoincrement()) @id
  day_of_the_week day_of_the_week @unique
  open_hour       DateTime
  close_hour      DateTime

  shop            shop            @relation(fields: [shopId], references: [id])
  shopId          Int             @unique
}

// PRODUCT-RELATED MODELS

model category {
  id        Int           @default(autoincrement()) @id
  name      category_name @unique

  products  product[]
}

model product {
  id          Int      @default(autoincrement()) @id
  name        String   @unique
  price       Float
  description String

  producer    producer @relation(fields: [producer_id], references: [id])
  producer_id Int

  category    category @relation(fields: [category_id], references: [id])
  category_id Int      @unique
}

// ORDER-RELATED MODELS

model order_item {
  id        Int     @default(autoincrement()) @id
  quantity  Int

  order     order[]
}

model order {
  id          Int       @default(autoincrement()) @id
  created_at  DateTime  @default(dbgenerated("now()"))

  customer    customer @relation(fields: [customer_id], references: [id])
  customer_id Int

  order_item  order_item? @relation(fields: [order_item_id], references: [id])
  order_item_id Int?      @unique
}

// CUSTOMER-RELATED MODELS

model customer {
  id            Int      @default(autoincrement()) @id
  username      String   @unique
  email         String   @unique
  password      String
  phone_number  String   @unique
  lat           Float?
  lon           Float?

  order         order[]
}
